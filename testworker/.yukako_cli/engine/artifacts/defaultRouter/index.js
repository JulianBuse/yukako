var p=console.log,c=t=>{console.log=(...e)=>{let s={id:t.id,type:t.type,name:t.name},n=JSON.stringify(s);p(`__START_YUKAKO_LOG_HEADER__${n}__END_YUKAKO_LOG_HEADER__`,...e)}};var _={fetch:async(t,e)=>{c({id:e.__meta.id,type:"router",name:"yukako-router"});let s=t.headers.get("x-forwarded-host")||t.headers.get("host")||"",n=new URL(t.url);if(console.log(`[router] ${t.method} ${n.pathname}${n.search} ${s}`),!s)return new Response("No x-forwarded-host header",{status:400});let i=Object.values(e.__meta.routes).filter(r=>r.host===s);if(i.length===0)return new Response("No service matching host",{status:404});let a=i.filter(r=>{if(!r.paths||r.paths.length===0)return!0;let h=new URL(t.url);for(let u of r.paths)if(h.pathname.startsWith(u))return!0});if(a.length===0)return new Response("No service matching path",{status:404});let g=a[0],o=e[g.service];return!o||!o.fetch?new Response("No service found",{status:404}):o.fetch(t)}};export{_ as default};
